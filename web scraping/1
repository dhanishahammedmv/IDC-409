import requests
from bs4 import BeautifulSoup
import sqlite3
import matplotlib.pyplot as plt

# Create an SQLite database (or connect to an existing one)
conn = sqlite3.connect('faculty_data_iimc.db')
cursor = conn.cursor()

# Create a table to store faculty data
cursor.execute('''
    CREATE TABLE IF NOT EXISTS faculty (
        id INTEGER PRIMARY KEY,
        name TEXT,
        academic_group TEXT,
        email TEXT,
        phone_no TEXT
    )
''')

# Commit the table creation
conn.commit()

url = "https://www.iimcal.ac.in/faculty/faculty-directory"
response = requests.get(url)
print("response status code", response.status_code, '\n')
soup = BeautifulSoup(response.text, 'html.parser')

faculty_names = soup.find_all(class_="views-field-field-name")
print("Faculty Details \n")
for name_element in faculty_names:
    # extract name, department, email id, phone no of the professor
    name = name_element.find('a').text.strip()
    department_element = name_element.find_next('span', class_='views-field-field-academic-group')
    academic_group = department_element.find('span', class_='field-content').text.strip() if department_element else "Department not available"
    email_element = name_element.find_next('span', class_='views-field-mail')
    email = email_element.find('span', class_='field-content').text.strip() if email_element else "Email not available"
    phone_element = name_element.find_next('span', class_='views-field-field-phone-no')
    phone_no = phone_element.find('span', class_='field-content').text.strip() if phone_element else "Phone No. not available"

    print("Name of proffesor:", name)
    print("Department:", academic_group)
    print("Email:", email)
    print("Phone No.:", phone_no)
    print('\n')

    # Check if the professor's name already exists in the table
    cursor.execute('SELECT id FROM faculty WHERE name = ?', (name,))
    existing_record = cursor.fetchone()
    if existing_record:
        cursor.execute('UPDATE faculty SET academic_group = ?, email = ?, phone_no = ? WHERE id = ?',
                       (academic_group, email, phone_no, existing_record[0]))
    else:
        cursor.execute('INSERT INTO faculty (name, academic_group, email, phone_no) VALUES (?, ?, ?, ?)',
                       (name, academic_group, email, phone_no))

    conn.commit()

# Retrieve the data from the SQLite table and print it as an SQLite table
cursor.execute('SELECT * FROM faculty')
faculty_data = cursor.fetchall()

print('sqlite3 format \n')
# Display the data as an SQLite table
for row in faculty_data:
    print(row)

# Retrieve the data from the SQLite table to plot the graph
cursor.execute('SELECT academic_group, COUNT(*) FROM faculty GROUP BY academic_group')
department_data = cursor.fetchall()

print('\n make a sense on data \n')
# Extract data for plotting
departments = [row[0] for row in department_data]
faculty_counts = [row[1] for row in department_data]

# Plotting the bar chart
plt.figure(figsize=(10, 6))
plt.bar(departments, faculty_counts, color='skyblue')
plt.title('Distribution of Faculty Members by Department')
plt.xlabel('Department')
plt.ylabel('Number of Faculty Members')
plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability
plt.tight_layout()

# Display the plot
plt.show()

# Close the database connection
conn.close()
